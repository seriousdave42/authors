{"version":3,"sources":["components/AuthorForm.js","components/DeleteButton.js","components/AuthorList.js","views/Main.js","components/QuoteForm.js","views/AuthorDetail.js","views/Update.js","App.js","serviceWorker.js","index.js"],"names":["AuthorForm","props","initialAuthor","authorHandler","errors","useState","authorName","setAuthorName","onSubmit","e","preventDefault","map","error","i","key","type","value","onChange","target","DeleteButton","authorID","successCallback","onClick","axios","delete","then","res","catch","err","console","log","AuthorList","style","width","margin","authors","author","to","_id","removeFromDOM","Main","setAuthors","loaded","setLoaded","setErrors","useEffect","get","data","post","sort","author1","author2","errorResponse","response","errorArr","Object","keys","push","message","filter","QuoteForm","quoteHandler","newQuote","setNewQuote","AuthorDetail","setAuthor","quotes","setQuotes","badID","setBadID","id","authorQuotes","navigate","put","length","quote","slice","deleteQuote","Update","App","className","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f19ee0e5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AuthorForm = (props) => {\r\n\r\n    const { initialAuthor, authorHandler, errors } = props;\r\n    const [authorName, setAuthorName] = useState(initialAuthor.authorName);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        authorHandler({\r\n            authorName: authorName\r\n        });\r\n        setAuthorName(\"\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit = {onSubmitHandler}>\r\n                {errors.map((error, i) => <p key={i}>{error}</p>)}\r\n                <p>\r\n                    <label>Name </label>\r\n                    <input type=\"text\" value={authorName} onChange={e=>setAuthorName(e.target.value)}></input>\r\n                </p>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorForm;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DeleteButton = props => {\r\n\r\n    const {authorID, successCallback} = props;\r\n\r\n    const deleteAuthor = e => {\r\n        axios.delete(\"http://localhost:8000/api/author/\"+authorID)\r\n            .then(res => successCallback())\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    return (\r\n        <button onClick={deleteAuthor}>Delete</button>\r\n    )\r\n        \r\n}\r\n\r\nexport default DeleteButton","import React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst AuthorList = props => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Author List</h2>\r\n            <ul style={{width: \"200px\", margin: \"auto\"}}>\r\n                {props.authors.map((author, i) => \r\n                    <li key={i}>\r\n                        <Link to = {`/author/${author._id}`}>{author.authorName}</Link>\r\n                        <DeleteButton authorID={author._id} successCallback={() => props.removeFromDOM(author._id)} />    \r\n                    </li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AuthorList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AuthorForm from '../components/AuthorForm';\r\nimport AuthorList from '../components/AuthorList';\r\n\r\nconst Main = () => {\r\n\r\n    const [authors, setAuthors] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/authors')\r\n            .then(res => {\r\n                setAuthors(res.data.authors);\r\n                setLoaded(true);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n    const newAuthor = author => {\r\n        axios.post(\"http://localhost:8000/api/author\", author)\r\n            .then(res => {\r\n                setAuthors([...authors, res.data.author].sort((author1, author2) => author1.authorName > author2.authorName ? 1 : -1));\r\n                setErrors([])\r\n            })\r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            });\r\n    }\r\n\r\n    const removeFromDOM = authorID => {\r\n        setAuthors(authors.filter(author => author._id !== authorID));\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Favorite Authors</h1>\r\n            <AuthorForm initialAuthor={{\r\n                authorName: \"\"\r\n            }} authorHandler={newAuthor} errors={errors} />\r\n            <hr />\r\n            {loaded && <AuthorList authors={authors} removeFromDOM={removeFromDOM}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\n\r\nconst QuoteForm = (props) => {\r\n\r\n    const {quoteHandler, errors} = props;\r\n    const [newQuote, setNewQuote] = useState(\"\");\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        quoteHandler(newQuote);\r\n        setNewQuote(\"\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit = {onSubmitHandler}>\r\n                {errors.map((error, i) => <p key={i}>{error}</p>)}\r\n                <p>\r\n                    <label>Add a Quote: </label>\r\n                    <input type=\"text\" value={newQuote} onChange={e=>setNewQuote(e.target.value)}></input>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteForm;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport { Link } from '@reach/router';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport QuoteForm from '../components/QuoteForm';\r\n\r\nconst AuthorDetail = props => {\r\n\r\n    const [author, setAuthor] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [quotes, setQuotes] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const [badID, setBadID] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/author/\" + props.id)\r\n            .then(res => {\r\n                setAuthor(res.data.author)\r\n                setQuotes(res.data.author.authorQuotes)\r\n                setLoaded(true)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setBadID(true)\r\n            });\r\n    }, [props.id])\r\n\r\n    const quoteHandler = newQuote => {\r\n        axios.put(\"http://localhost:8000/api/author/\"+props.id, {\r\n            authorName: author.authorName,\r\n            authorQuotes: [...quotes, newQuote]\r\n        })\r\n            .then(res=> {\r\n                console.log(\"Response: \", res);\r\n                setQuotes([...quotes, res.data.author.authorQuotes[res.data.author.authorQuotes.length-1]])\r\n            })\r\n            .catch(err=> {\r\n                console.log(\"Error: \", err);\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            });\r\n    }\r\n\r\n    const deleteQuote = (e, i) => {\r\n        axios.put(\"http://localhost:8000/api/author/\"+props.id, {\r\n            authorName: author.authorName,\r\n            authorQuotes: [...quotes.slice(0,i), ...quotes.slice(i+1)]\r\n        })\r\n            .then(res=> {\r\n                console.log(\"Response: \", res);\r\n                setQuotes(res.data.author.authorQuotes)\r\n            })\r\n            .catch(err=> {\r\n                console.log(\"Error: \", err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {badID &&\r\n                <div>\r\n                    <h3>We're sorry, this author page doesn't exist</h3>\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n            }\r\n            {!badID &&\r\n            <div>\r\n                <h2>{author.authorName}</h2>\r\n                <Link to={\"/author/\"+author._id+\"/update\"}>Update</Link>\r\n                <br />\r\n                <DeleteButton authorID={author._id} successCallback={() => navigate(\"/\")}/>\r\n                <hr />\r\n                <h3>Quotes</h3>\r\n                <QuoteForm initialAuthor={author} errors={errors} quoteHandler={quoteHandler}/>\r\n                {loaded && <ul style={{width: \"200px\", margin: \"auto\"}}>\r\n                    {quotes.map((quote, i) => \r\n                        <li key={i}>\r\n                            \"{quote}\"\r\n                            <button onClick={(e) => deleteQuote(e, i)}>Delete</button>\r\n                        </li>)}\r\n                </ul>}\r\n                <hr />\r\n                <Link to=\"/\">Back to Home</Link>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Link, navigate} from '@reach/router';\r\nimport axios from 'axios';\r\nimport AuthorForm from '../components/AuthorForm';\r\n\r\nconst Update = (props) => {\r\n    const { id } = props;\r\n    const [author, setAuthor] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    const [badID, setBadID] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/author/\" + id)\r\n            .then(res => {\r\n                setAuthor({...res.data.author});\r\n                setLoaded(true);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setBadID(true)\r\n            });\r\n    }, [id])\r\n\r\n    const updateAuthor = author => {\r\n        axios.put(\"http://localhost:8000/api/author/\"+id, author)\r\n            .then(res=> {\r\n                console.log(\"Response: \", res);\r\n                navigate(\"/author/\"+id);\r\n            })\r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {badID &&\r\n                <div>\r\n                    <h3>We're sorry, this author page doesn't exist</h3>\r\n                    <Link to=\"/\">Home</Link>\r\n                </div>\r\n            }\r\n            {loaded && \r\n                <AuthorForm initialAuthor={author} authorHandler={updateAuthor} errors={errors}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;\r\n","import React from 'react';\nimport {Router} from '@reach/router';  \nimport './App.css';\nimport Main from './views/Main';\nimport AuthorDetail from './views/AuthorDetail';\nimport Update from './views/Update';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Main path=\"/\" />\n        <AuthorDetail path=\"/author/:id\" />\n        <Update path=\"author/:id/update\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}